














#version 460 core
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable


#line 1 "/home/z00522378/workspace/OH_1210/foundation/graphic/graphic_3d/lume/LumeRender/api/render/shaders/common/render_compatibility_common.h"






































precision highp float;
precision highp int;





layout(constant_id = 256)const uint CORE_BACKEND_TYPE = 0;




layout(constant_id = 257)const float CORE_FLIP_NDC = 1.0;










vec2 GetFragCoordUv(vec2 fragCoord, vec2 inverseTexelSize)
{
    vec2 uv = fragCoord * inverseTexelSize;
    if(CORE_FLIP_NDC < 0.0){
        uv = vec2(uv . x, 1.0 - uv . y);
    }
    return uv;
}







#line 22 "shader/fullscreen_triangle.vert"





layout(location = 0)out vec2 outUv;



void main(void)
{
    float x = - 1.0 + float((gl_VertexIndex & 1)<< 2);
    float y = 1.0 - float((gl_VertexIndex & 2)<< 1);
    outUv . x =(x + 1.0)* 0.5;
    outUv . y =(y + 1.0)* 0.5;
                                    { gl_Position =(vec4(x, y, 0, 1));if(CORE_BACKEND_TYPE != 0){ gl_Position = vec4(gl_Position . x, gl_Position . y * CORE_FLIP_NDC,(gl_Position . z * 2.0 - gl_Position . w), gl_Position . w);} };
}

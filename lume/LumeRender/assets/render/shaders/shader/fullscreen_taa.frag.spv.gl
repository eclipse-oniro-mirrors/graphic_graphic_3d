#version 450

struct LocalPostProcessPushConstantStruct
{
    vec4 viewportSizeInvSize;
    vec4 factor;
};

const ivec2 _144[5] = ivec2[](ivec2(-1), ivec2(1, -1), ivec2(0), ivec2(-1, 1), ivec2(1));

struct uPostProcessPushConstant
{
    LocalPostProcessPushConstantStruct uPc;
};

uniform uPostProcessPushConstant CORE_PC_0;

uniform sampler2D s1_b0_s1_b4;
uniform sampler2D s1_b2_s1_b4;
uniform sampler2D s1_b1_s1_b4;
uniform sampler2D s1_b3_s1_b4;

layout(location = 0) in vec2 inUv;
layout(location = 0) out vec4 outColor;

void main()
{
    vec2 _587;
    if (uint(CORE_PC_0.uPc.factor.x + 0.5) >= 1u)
    {
        vec2 _456 = vec2(1.0, textureLodOffset(s1_b0_s1_b4, inUv, 0.0, ivec2(-1)).x);
        vec2 _469 = vec2(textureLodOffset(s1_b0_s1_b4, inUv, 0.0, ivec2(1, -1)).x, textureLodOffset(s1_b0_s1_b4, inUv, 0.0, ivec2(0)).x);
        bvec2 _472 = lessThan(_456, _469);
        vec2 _479 = mix(_456, _469, _472);
        vec2 _492 = vec2(textureLodOffset(s1_b0_s1_b4, inUv, 0.0, ivec2(-1, 1)).x, textureLodOffset(s1_b0_s1_b4, inUv, 0.0, ivec2(1)).x);
        bvec2 _496 = lessThan(_479, _492);
        ivec2 _497 = mix(mix(ivec2(2, 0), ivec2(1, 2), _472), ivec2(3, 4), _496);
        vec2 _503 = mix(_479, _492, _496);
        int _585;
        if (_503.x < _503.y)
        {
            _585 = _497.x;
        }
        else
        {
            _585 = _497.y;
        }
        _587 = fma(vec2(_144[_585]), CORE_PC_0.uPc.viewportSizeInvSize.zw, inUv);
    }
    else
    {
        _587 = inUv;
    }
    vec4 _215 = textureLod(s1_b1_s1_b4, inUv, 0.0);
    vec4 _228 = textureLod(s1_b3_s1_b4, fma(-textureLod(s1_b2_s1_b4, _587, 0.0).xy, CORE_PC_0.uPc.viewportSizeInvSize.zw, inUv), 0.0);
    vec3 _237 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(0, -1)).xyz;
    vec3 _245 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(-1, 0)).xyz;
    vec3 _248 = _215.xyz;
    vec3 _268 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(1, 0)).xyz;
    vec3 _276 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(0, 1)).xyz;
    vec3 _288 = min(min(min(_237, _245), _248), min(_268, _276));
    vec3 _292 = max(max(max(_237, _245), _248), max(_268, _276));
    vec3 _299 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(-1)).xyz;
    vec3 _306 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(1, -1)).xyz;
    vec3 _325 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(-1, 1)).xyz;
    vec3 _332 = textureLodOffset(s1_b1_s1_b4, inUv, 0.0, ivec2(1)).xyz;
    vec3 _361 = clamp(_228.xyz, (_288 + min(min(_288, min(_299, _306)), min(_325, _332))) * 0.5, (_292 + max(max(_292, max(_299, _306)), max(_325, _332))) * 0.5);
    vec3 _377 = _361.xyz * (1.0 / (1.0 + fma(0.114000000059604644775390625, _361.z, fma(0.2989999949932098388671875, _361.x, 0.58700001239776611328125 * _361.y))));
    vec3 _385 = _248 * (1.0 / (1.0 + fma(0.114000000059604644775390625, _215.z, fma(0.2989999949932098388671875, _215.x, 0.58700001239776611328125 * _215.y))));
    vec4 _396 = mix(vec4(_377.x, _377.y, _377.z, _228.w), vec4(_385.x, _385.y, _385.z, _215.w), vec4(CORE_PC_0.uPc.factor.w));
    vec3 _404 = _396.xyz * (1.0 / (1.0 - fma(0.114000000059604644775390625, _396.z, fma(0.2989999949932098388671875, _396.x, 0.58700001239776611328125 * _396.y))));
    outColor = max(vec4(_404.x, _404.y, _404.z, _396.w), vec4(0.0));
}


#version 320 es
precision highp float;
precision highp int;

struct LocalPostProcessStruct
{
    vec4 factors[16];
};

struct LocalPostProcessPushConstantStruct
{
    vec4 viewportSizeInvSize;
    vec4 factor;
};

layout(std140) uniform s0_b1
{
    LocalPostProcessStruct uLocalData;
} _s0_b1;

struct uPostProcessPushConstant
{
    LocalPostProcessPushConstantStruct uPc;
};

uniform uPostProcessPushConstant CORE_PC_0;

uniform highp sampler2D s1_b2;
uniform highp sampler2D s1_b3;
uniform highp sampler2D s1_b0;
uniform highp sampler2D s1_b1;

layout(location = 0) in vec2 inUv;
layout(location = 0) out vec4 outColor;

void main()
{
    uint _158 = uint(_s0_b1.uLocalData.factors[0].x + 0.5);
    float _542;
    if (_158 == 0u)
    {
        _542 = 7.0;
    }
    else
    {
        float _543;
        if (_158 == 1u)
        {
            _543 = 11.0;
        }
        else
        {
            _543 = (_158 == 2u) ? 15.0 : 11.0;
        }
        _542 = _543;
    }
    uint _182 = uint(_s0_b1.uLocalData.factors[0].y + 0.5);
    vec2 _221 = (textureLod(s1_b3, inUv, 0.0).xy * CORE_PC_0.uPc.viewportSizeInvSize.zw) * _s0_b1.uLocalData.factors[0].w;
    vec2 _229 = (textureLod(s1_b2, inUv, 0.0).xy * CORE_PC_0.uPc.viewportSizeInvSize.zw) * _s0_b1.uLocalData.factors[0].w;
    vec4 _236 = texture(s1_b0, inUv);
    bool _457 = abs(_221.x) < 9.9999997473787516355514526367188e-05;
    bool _464;
    if (!_457)
    {
        _464 = abs(_221.y) < 9.9999997473787516355514526367188e-05;
    }
    else
    {
        _464 = _457;
    }
    if (!_464)
    {
        float _555;
        vec3 _559;
        if (_182 == 0u)
        {
            vec3 _560;
            _560 = vec3(0.0);
            for (uint _553 = 0u; _553 < uint(_542); )
            {
                _560 += textureLod(s1_b0, inUv + (_229 * ((float(_553) / _542) - 0.5)), 0.0).xyz;
                _553++;
                continue;
            }
            _559 = _560;
            _555 = _542;
        }
        else
        {
            float _557;
            vec3 _561;
            if (_182 == 1u)
            {
                vec3 _551;
                float _552;
                _552 = 0.0;
                _551 = vec3(0.0);
                for (uint _549 = 0u; _549 < uint(_542); )
                {
                    _552 += 1.0;
                    _551 += (textureLod(s1_b0, inUv + (_221 * ((float(_549) / _542) - 0.5)), 0.0).xyz * 1.0);
                    _549++;
                    continue;
                }
                _561 = _551;
                _557 = _552;
            }
            else
            {
                float _558;
                vec3 _562;
                if (_182 == 2u)
                {
                    float _339 = length(_221);
                    vec4 _343 = textureLod(s1_b1, inUv, 0.0);
                    float _344 = _343.x;
                    vec3 _547;
                    float _548;
                    _548 = 0.0;
                    _547 = vec3(0.0);
                    for (uint _545 = 0u; _545 < uint(_542); )
                    {
                        vec2 _366 = inUv + (_221 * ((float(_545) / _542) - 0.5));
                        vec4 _370 = textureLod(s1_b1, _366, 0.0);
                        float _371 = _370.x;
                        vec2 _379 = (textureLod(s1_b2, _366, 0.0).xy * CORE_PC_0.uPc.viewportSizeInvSize.zw) * _s0_b1.uLocalData.factors[0].w;
                        float _486 = length(_379 - _229);
                        float _530 = 1.0 - smoothstep(0.949999988079071044921875 * _339, 1.0499999523162841796875 * _339, _486);
                        float _502 = fma(_530 * _530, 2.0, fma(clamp(fma(-(_344 - _371), 100.0, 1.0), 0.0, 1.0), clamp(1.0 - (_486 / _339), 0.0, 1.0), clamp(fma(-(_371 - _344), 100.0, 1.0), 0.0, 1.0) * clamp(1.0 - (length(_229 - _379) / _339), 0.0, 1.0)));
                        _548 += _502;
                        _547 += (textureLod(s1_b0, _366, 0.0).xyz * _502);
                        _545++;
                        continue;
                    }
                    _562 = _547;
                    _558 = _548;
                }
                else
                {
                    _562 = vec3(0.0);
                    _558 = _542;
                }
                _561 = _562;
                _557 = _558;
            }
            _559 = _561;
            _555 = _557;
        }
        outColor = vec4(mix(_236.xyz, _559 / vec3(max(0.001000000047497451305389404296875, _555)), vec3(_s0_b1.uLocalData.factors[0].z)), 1.0);
    }
    else
    {
        outColor = vec4(_236.xyz, 1.0);
    }
}


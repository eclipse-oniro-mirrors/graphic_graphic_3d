#version 450

struct LocalPostProcessPushConstantStruct
{
    vec4 viewportSizeInvSize;
    vec4 factor;
};

struct uPostProcessPushConstant
{
    LocalPostProcessPushConstantStruct uPc;
};

uniform uPostProcessPushConstant CORE_PC_0;

uniform sampler2D s1_b0;

layout(location = 0) in vec2 inUv;
layout(location = 0) out vec4 outColor;

void main()
{
    vec2 velocities[16];
    velocities[0u] = textureLod(s1_b0, inUv, 0.0).xy;
    velocities[1u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.25, 0.0), inUv), 0.0).xy;
    velocities[2u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.5, 0.0), inUv), 0.0).xy;
    velocities[3u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.75, 0.0), inUv), 0.0).xy;
    vec2 _122 = fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.0, 0.25), inUv);
    velocities[4u] = textureLod(s1_b0, _122, 0.0).xy;
    velocities[5u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.25, 0.0), _122), 0.0).xy;
    velocities[6u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.5, 0.0), _122), 0.0).xy;
    velocities[7u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.75, 0.0), _122), 0.0).xy;
    vec2 _165 = fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.0, 0.5), inUv);
    velocities[8u] = textureLod(s1_b0, _165, 0.0).xy;
    velocities[9u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.25, 0.0), _165), 0.0).xy;
    velocities[10u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.5, 0.0), _165), 0.0).xy;
    velocities[11u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.75, 0.0), _165), 0.0).xy;
    vec2 _208 = fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.0, 0.75), inUv);
    velocities[12u] = textureLod(s1_b0, _208, 0.0).xy;
    velocities[13u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.25, 0.0), _208), 0.0).xy;
    velocities[14u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.5, 0.0), _208), 0.0).xy;
    velocities[15u] = textureLod(s1_b0, fma(CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.75, 0.0), _208), 0.0).xy;
    vec2 _306;
    _306 = vec2(0.0);
    uint _305 = 0u;
    float _307 = 0.0;
    for (; _305 < 16u; )
    {
        float _304 = fma(velocities[_305].x, velocities[_305].x, velocities[_305].y * velocities[_305].y);
        bool _268 = _304 > _307;
        _307 = _268 ? _304 : _307;
        _306 = mix(_306, velocities[_305], bvec2(_268));
        _305++;
        continue;
    }
    outColor = vec4(_306, 0.0, 0.0);
}


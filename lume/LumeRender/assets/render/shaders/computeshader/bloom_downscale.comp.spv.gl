#version 450
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

struct LocalPostProcessPushConstantStruct
{
    vec4 viewportSizeInvSize;
    vec4 factor;
};

#ifndef SPIRV_CROSS_CONSTANT_ID_0
#define SPIRV_CROSS_CONSTANT_ID_0 0u
#endif
const uint CORE_POST_PROCESS_FLAGS = SPIRV_CROSS_CONSTANT_ID_0;
const uint _420 = (2u & CORE_POST_PROCESS_FLAGS);
const bool _422 = (_420 == 2u);

struct uPostProcessPushConstant
{
    LocalPostProcessPushConstantStruct uPc;
};

uniform uPostProcessPushConstant CORE_PC_0;

layout(binding = 11, rgba16f) uniform writeonly image2D s1_b0;
uniform sampler2D s1_b1_s1_b2;

void main()
{
    vec2 _404 = vec2(gl_GlobalInvocationID.xy) + vec2(0.5);
    vec2 _415 = _404 * CORE_PC_0.uPc.viewportSizeInvSize.zw;
    vec3 _886;
    if (_422)
    {
        float _486 = -CORE_PC_0.uPc.viewportSizeInvSize.z;
        float _571 = -CORE_PC_0.uPc.viewportSizeInvSize.w;
        _886 = ((((((((textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(_486, CORE_PC_0.uPc.viewportSizeInvSize.w)), 0.0).xyz * 0.0625) + (textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.0, CORE_PC_0.uPc.viewportSizeInvSize.w)), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, CORE_PC_0.uPc.viewportSizeInvSize.zw), 0.0).xyz * 0.0625)) + (textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(_486, 0.0)), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, _415, 0.0).xyz * 0.25)) + (textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(CORE_PC_0.uPc.viewportSizeInvSize.z, 0.0)), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, -CORE_PC_0.uPc.viewportSizeInvSize.zw), 0.0).xyz * 0.0625)) + (textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(0.0, _571)), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, fma(_404, CORE_PC_0.uPc.viewportSizeInvSize.zw, vec2(CORE_PC_0.uPc.viewportSizeInvSize.z, _571)), 0.0).xyz * 0.0625);
    }
    else
    {
        float _606 = _415.x;
        float _609 = _606 - CORE_PC_0.uPc.viewportSizeInvSize.z;
        float _611 = _415.y;
        float _614 = _611 - CORE_PC_0.uPc.viewportSizeInvSize.w;
        float _642 = _606 + CORE_PC_0.uPc.viewportSizeInvSize.z;
        float _711 = _611 + CORE_PC_0.uPc.viewportSizeInvSize.w;
        vec2 _754 = CORE_PC_0.uPc.viewportSizeInvSize.zw * 0.5;
        float _761 = _754.x;
        float _762 = _606 - _761;
        float _766 = _754.y;
        float _767 = _611 - _766;
        float _781 = _606 + _761;
        float _805 = _611 + _766;
        _886 = ((((((((((((textureLod(s1_b1_s1_b2, vec2(_609, _614), 0.0).xyz * 0.03125) + (textureLod(s1_b1_s1_b2, vec2(_606, _614), 0.0).xyz * 0.0625)) + (textureLod(s1_b1_s1_b2, vec2(_642, _614), 0.0).xyz * 0.03125)) + (textureLod(s1_b1_s1_b2, vec2(_609, _611), 0.0).xyz * 0.0625)) + (textureLod(s1_b1_s1_b2, _415, 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, vec2(_642, _611), 0.0).xyz * 0.0625)) + (textureLod(s1_b1_s1_b2, vec2(_609, _711), 0.0).xyz * 0.03125)) + (textureLod(s1_b1_s1_b2, vec2(_606, _711), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, vec2(_642, _711), 0.0).xyz * 0.03125)) + (textureLod(s1_b1_s1_b2, vec2(_762, _767), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, vec2(_781, _767), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, vec2(_762, _805), 0.0).xyz * 0.125)) + (textureLod(s1_b1_s1_b2, vec2(_781, _805), 0.0).xyz * 0.125);
    }
    imageStore(s1_b0, ivec2(gl_GlobalInvocationID.xy), vec4(min(_886, vec3(64512.0)), 1.0));
}


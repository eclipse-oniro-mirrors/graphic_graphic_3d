














#version 460 core
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable


#line 1 "/home/z00522378/workspace/OH_1210/foundation/graphic/graphic_3d/lume/LumeRender/api/render/shaders/common/render_compatibility_common.h"






































precision highp float;
precision highp int;





layout(constant_id = 256)const uint CORE_BACKEND_TYPE = 0;




layout(constant_id = 257)const float CORE_FLIP_NDC = 1.0;










vec2 GetFragCoordUv(vec2 fragCoord, vec2 inverseTexelSize)
{
    vec2 uv = fragCoord * inverseTexelSize;
    if(CORE_FLIP_NDC < 0.0){
        uv = vec2(uv . x, 1.0 - uv . y);
    }
    return uv;
}







#line 22 "shader/core3d_dm_depth_vsm.frag"





layout(location = 0)out vec4 outColor;








void main(void)
{
    const float moment1 = gl_FragCoord . z;
    float moment2 = moment1 * moment1;



    float dx = dFdx(moment1);
    float dy = dFdy(moment1);
    moment2 += 0.25 *(dx * dx + dy * dy);


    outColor = vec4(moment1, moment2, 0.0, 0.0);
}

# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/graphic/graphic_3d/lume/lume_config.gni")

module_output_path = "graphic_3d/lume/LumeBase"

ohos_unittest("lume_base_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${LUME_BASE_PATH}/api",
    "${LUME_CORE_PATH}/api",
    "${LUME_RENDER_PATH}/api",
    "${LUME_CORE3D_PATH}/api",
    "${LUME_CORE3D_PATH}/src",
    "${LUME_CORE_PATH}/src",
    "${LUME_METAOBJECT_PATH}/include",
    "${LUME_SCP_PATH}/plugin/include",
    "${LUME_CORE_PATH}/api/platform/ohos",
    "${LUME_CORE_PATH}/ecshelper",
    "${LUME_ROOT}/../3d_widget_adapter/core/include",
  ]

  configs = [
    "${LUME_ROOT}/../3d_widget_adapter:widget_adapter_config",
    "${LUME_ROOT}/../3d_scene_adapter:scene_adapter_config",
  ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  cflags_cc = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  sources = [
    "src/containers/array_view_test.cpp",
    "src/containers/byte_array_test.cpp",
    "src/containers/iterator_test.cpp",
    "src/containers/ptr_test.cpp",
    "src/containers/string_view_test.cpp",
    "src/containers/unordered_map_test.cpp",
    "src/containers/vector_test.cpp",
    "src/util/base64_test.cpp",
    "src/util/color_test.cpp",
    "src/util/uid_test.cpp",
    "src/util/utf8_test.cpp",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
  ]

  part_name = "graphic_3d"
  subsystem_name = "graphic"
}

group("unittest") {
  testonly = true
  deps = []
  deps += [ ":lume_base_test" ]
}

# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_3d/lume/lume_config.gni")

config("lume_scenewidget_config") {
  include_dirs = [
    "include",
    "src",
    "${LUME_META_PATH}/include",
    "${LUME_CORE_PATH}/ecshelper"
  ]

  defines = [
    "__OHOS_PLATFORM__",
    "CORE3D_PUBLIC=__attribute__((visibility(\"default\")))",
    "CORE_USE_COMPILER_GENERATED_STATIC_LIST=1",
    "CORE3D_SHARED_LIBRARY=1",
    "CORE3D_VALIDATION_ENABLED=0",
    "CORE3D_TESTS_ENABLED=0",
    "CORE3D_DEV_ENABLED=${CORE_DEV_ENABLED}",
    "CORE3D_PUBLIC=__attribute__((visibility(\"default\")))",
    "CORE_USE_COMPILER_GENERATED_STATIC_LIST=1",
    "CORE_STATIC_PLUGIN_HEADER=${CORE_STATIC_PLUGIN_HEADER }"
  ]
  cflags = [
    "-Wno-unused-function",
    "-Wno-unused-parameter",
    "-Wno-sign-compare",
    "-Wno-unused-variable",
    "-Wno-unused-private-field",
    "-Wno-tautological-unsigned-zero-compare",
    "-Wno-logical-op-parentheses",
    "-Wno-unused-local-typedef",
    "-fvisibility=hidden",
    "-ffunction-sections",
    "-fdata-sections",
    "-Wno-ignored-qualifiers",
  ]
  cflags_cc = [
    "-std=c++17",
    "-Wno-overloaded-virtual",
    "-Wno-thread-safety-attributes",
    "-Wno-missing-braces",
    ]
}

ohos_source_set("lume_scenewidget_src") {
  configs = [
    ":lume_scenewidget_config",
    "${LUME_ROOT}/Lume_3DText:lume_3dtext_api",
    "${LUME_RENDER_PATH}:lume_render_api",
    "${LUME_CORE_PATH}:lume_base_api",
    "${LUME_CORE_PATH}:lume_engine_api",
    "${LUME_CORE_PATH}:lume_component_help_config",
    "${LUME_SERIALIZER_PATH}:ecs_serializer_api",    
    "${LUME_CORE_PATH}:lume_default"
  ]

  sources = [
    "src/application_context.h",
    "src/asset/asset_object.cpp",
    "src/asset/asset_object.h",
    "src/component/animation_component.cpp",
    "src/component/animation_component.h",
    "src/component/camera_component.cpp",
    "src/component/camera_component.h",
    "src/component/environment_component.cpp",
    "src/component/environment_component.h",
    "src/component/generic_component.cpp",
    "src/component/generic_component.h",
    "src/component/layer_component.cpp",
    "src/component/layer_component.h",
    "src/component/light_component.cpp",
    "src/component/light_component.h",
    "src/component/material_component.cpp",
    "src/component/material_component.h",
    "src/component/mesh_component.cpp",
    "src/component/mesh_component.h",
    "src/component/node_component.cpp",
    "src/component/node_component.h",
    "src/component/postprocess_component.cpp",
    "src/component/postprocess_component.h",
    "src/component/text_component.cpp",
    "src/component/text_component.h",
    "src/component/transform_component.cpp",
    "src/component/transform_component.h",
    "src/component_factory.h",
    "src/containable_object.h",
    "src/converting_value.h",
    "src/core/camera.cpp",
    "src/core/camera.h",
    "src/core/ecs.cpp",
    "src/core/ecs.h",
    "src/core/ecs_listener.cpp",
    "src/core/ecs_listener.h",
    "src/core/ecs_object.cpp",
    "src/core/ecs_object.h",
    "src/core/internal_scene.cpp",
    "src/core/internal_scene.h",
    "src/core/intf_internal_raycast.h",
    "src/ecs_component/entity_owner_component.h",
    "src/ecs_component/entity_owner_component_info.h",
    "src/ecs_component/entity_owner_component_manager.cpp",
    "src/entity_converting_value.h",
    "src/mesh/mesh.cpp",
    "src/mesh/mesh.h",
    "src/mesh/mesh_creator.cpp",
    "src/mesh/mesh_creator.h",
    "src/mesh/mesh_resource.h",
    "src/mesh/sampler.cpp",
    "src/mesh/sampler.h",
    "src/mesh/submesh.cpp",
    "src/mesh/submesh.h",
    "src/mesh/texture.cpp",
    "src/mesh/texture.h",
    "src/node/camera_node.cpp",
    "src/node/camera_node.h",
    "src/node/light_node.cpp",
    "src/node/light_node.h",
    "src/node/mesh_node.cpp",
    "src/node/mesh_node.h",
    "src/node/node.cpp",
    "src/node/node.h",
    "src/node/startable_handler.cpp",
    "src/node/startable_handler.h",
    "src/node/text_node.cpp",
    "src/node/text_node.h",
    "src/plugin.cpp",
    "src/postprocess/bloom.cpp",
    "src/postprocess/bloom.h",
    "src/postprocess/color_fringe.cpp",
    "src/postprocess/color_fringe.h",
    "src/postprocess/postprocess.cpp",
    "src/postprocess/postprocess.h",
    "src/postprocess/postprocess_effect.h",
    "src/postprocess/tonemap.cpp",
    "src/postprocess/tonemap.h",
    "src/postprocess/vignette.cpp",
    "src/postprocess/vignette.h",
    "src/postprocess/util.h",
    "src/register_anys.cpp",
    "src/register_engine_access.cpp",
    "src/register_post_process_engine_access.cpp",
    "src/register_serializers.cpp",
    "src/render_configuration.cpp",
    "src/render_configuration.h",
    "src/render_context.h",
    "src/resource/ecs_animation.cpp",
    "src/resource/ecs_animation.h",
    "src/resource/environment.cpp",
    "src/resource/environment.h",
    "src/resource/image.cpp",
    "src/resource/image.h",
    "src/resource/material.cpp",
    "src/resource/material.h",
    "src/resource/render_resource.cpp",
    "src/resource/render_resource.h",
    "src/resource/render_resource_manager.cpp",
    "src/resource/render_resource_manager.h",
    "src/resource/resource_types.cpp",
    "src/resource/resource_types.h",
    "src/resource/shader.cpp",
    "src/resource/shader.h",
    "src/resource/types/animation_type.cpp",
    "src/resource/types/animation_type.h",
    "src/resource/types/environment_type.cpp",
    "src/resource/types/environment_type.h",
    "src/resource/types/gltf_scene_type.cpp",
    "src/resource/types/gltf_scene_type.h",
    "src/resource/types/image_type.cpp",
    "src/resource/types/image_type.h",
    "src/resource/types/material_type.cpp",
    "src/resource/types/material_type.h",
    "src/resource/types/postprocess_type.cpp",
    "src/resource/types/postprocess_type.h",
    "src/resource/types/scene_type.cpp",
    "src/resource/types/scene_type.h",
    "src/resource/types/shader_type.cpp",
    "src/resource/types/shader_type.h",
    "src/scene.cpp",
    "src/scene.h",
    "src/scene_manager.cpp",
    "src/scene_manager.h",
    "src/serialization/external_node.h",
    "src/serialization/scene_exporter.cpp",
    "src/serialization/scene_exporter.h",
    "src/serialization/scene_importer.cpp",
    "src/serialization/scene_importer.h",
    "src/serialization/scene_ser.h",
    "src/serialization/util.h",
    "src/util.h",
    "src/util_interfaces.h",
  ]

  include_dirs = [
    "${LUME_BASE_PATH}/api",
    "${LUME_CORE_PATH}/api",
    "${LUME_RENDER_PATH}/api",
    "${LUME_CORE3D_PATH}/api",
    "${LUME_META_PATH}/include"
  ]
 
  deps = [
    "${LUME_META_PATH}:libPluginMetaObject",
    "${LUME_CORE_PATH}/ecshelper:libAGPEcshelper"
  ]
  external_deps = [
    "c_utils:utils",
  ]
  part_name = "graphic_3d"
  subsystem_name = "graphic"
}

#ohos_static_library("libSceneWidget") {
#  public_deps = [
#    ":lume_scenewidget_src",
#  ]
#  part_name = "graphic_3d"
#  subsystem_name = "graphic"
#}

ohos_shared_library("libPluginSceneWidget") {
  deps = [
    "${LUME_SERIALIZER_PATH}:EcsSerializer",
    ":lume_scenewidget_src",
  ]
  relative_install_dir = "graphics3d"
  part_name = "graphic_3d"
  subsystem_name = "graphic"
}
